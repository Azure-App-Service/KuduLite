@page
@using System
@using System.Reflection
@using Microsoft.AspNetCore.Hosting
@inject IHostingEnvironment hostingEnvironment

@{

    // If Kudu home page gets requested with the api-version, we are likely dealing with a call
    // on the 'ARM bridge' to list 'extensions'. e.g.
    // /subscriptions/{sub}/resourceGroups/{rg}/providers/Microsoft.Web/sites/{site}/extensions?api-version=2015-08-01
    // Since we can't actually return a list of extensions, return [], which is enough to avoid ARM faliures

    //if (Request.QueryString["api-version"] != null)
    //{
    //    Response.Write("[]");
    //    Response.ContentType = "application/json";
    //    Response.End();
    //}

    ViewData["Title"] = "Kudu Services";

    string appServiceVersion = GetAppServiceVersion();
    Console.WriteLine(DateTime.Now.ToString("hh.mm.ss.ffffff"));
}

@functions {
    string GetAppServiceVersion()
    {
        Assembly assembly;
        try
        {
            assembly = Assembly.Load("Microsoft.Web.Hosting, Version=7.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");
            var fileVersionInfo = System.Diagnostics.FileVersionInfo.GetVersionInfo(assembly.Location);
            return fileVersionInfo.ProductVersion;
        }
        catch
        {
            return "";
        }
    }
}
<style type="text/css">
        .row > div {
            padding-bottom: 10px;
        }
</style>
<div class="container">
    @{
        string commitFile = System.IO.Path.Combine(hostingEnvironment.WebRootPath, "commit.txt");
        string sha = System.IO.File.Exists(commitFile) ? System.IO.File.ReadAllText(commitFile).Trim() : null;
        //var version = typeof(Kudu.Services.Web.Tracing.TraceMiddleware).Assembly.GetName().Version;
        var version = Constants.KuduBuild;
    }
    <h3>Environment</h3>
    <div class="row">
        <div class="col-xs-2">
            <strong>Build</strong>
        </div>
        <div>
            @version

            @if (!string.IsNullOrEmpty(sha))
            {
                string githubProjectRoot = Kudu.Core.Helpers.OSDetector.IsOnWindows() ? "ProjectKudu/kudu" : "Azure-App-Service/KuduLite";
                <text>
                    (<a id="sha" href="https://github.com/@githubProjectRoot/commit/@sha">@sha.Substring(0, 10)</a>)
                </text>
            }
        </div>
    </div>
    <div class="row">
        <div class="col-xs-2">
            <strong>Site up time</strong>
        </div>
        <div>
            @Kudu.Services.Web.Tracing.TraceMiddleware.UpTime.ToString(@"dd\.hh\:mm\:ss")
        </div>
    </div>
    <div class="row">
        <div class="col-xs-2">
            <strong>Site folder</strong>
        </div>
        <div>
            @Kudu.Services.Web.PathResolver.ResolveRootPath()
        </div>
    </div>
    <div class="row">
        <div class="col-xs-2">
            <strong>Temp folder</strong>
        </div>
        <div>
            @System.IO.Path.GetTempPath()
        </div>
    </div>
    <partial name="Index_RestApi" />
    <partial name="Index_BrowseHistory" />
    <h3>More information about Kudu can be found on the <a href="https://github.com/projectkudu/kudu/wiki">wiki</a>.</h3>
</div>
