<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArgumentMustBeGreaterThanOrEqualTo" xml:space="preserve">
    <value>Value must be greater than or equal to {0}.</value>
  </data>
  <data name="ByteRangeStreamContentNoRanges" xml:space="preserve">
    <value>Found zero byte ranges. There must be at least one byte range provided.</value>
  </data>
  <data name="ByteRangeStreamContentNotBytesRange" xml:space="preserve">
    <value>The range unit '{0}' is not valid. The range must have a unit of '{1}'.</value>
  </data>
  <data name="ByteRangeStreamEmpty" xml:space="preserve">
    <value>The stream over which '{0}' provides a range view must have a length greater than or equal to 1.</value>
  </data>
  <data name="ByteRangeStreamInvalidFrom" xml:space="preserve">
    <value>The 'From' value of the range must be less than or equal to {0}.</value>
  </data>
  <data name="ByteRangeStreamNoneOverlap" xml:space="preserve">
    <value>None of the requested ranges ({0}) overlap with the current extent of the selected resource.</value>
  </data>
  <data name="ByteRangeStreamNoOverlap" xml:space="preserve">
    <value>The requested range ({0}) does not overlap with the current extent of the selected resource.</value>
  </data>
  <data name="ByteRangeStreamNotSeekable" xml:space="preserve">
    <value>The stream over which '{0}' provides a range view must be seekable.</value>
  </data>
  <data name="ByteRangeStreamReadOnly" xml:space="preserve">
    <value>This is a read-only stream.</value>
  </data>
  <data name="Dropbox_Committing" xml:space="preserve">
    <value>Committing {0} change(s) from Dropbox.</value>
  </data>
  <data name="Dropbox_Synchronized" xml:space="preserve">
    <value>Synchronized {0} change(s) from Dropbox.</value>
  </data>
  <data name="Dropbox_SynchronizedWithFailure" xml:space="preserve">
    <value>Synchronized {0} of {1} change(s) from Dropbox with {2} failure(s).</value>
  </data>
  <data name="Dropbox_Synchronizing" xml:space="preserve">
    <value>Synchronizing changes from Dropbox.</value>
  </data>
  <data name="Dropbox_SynchronizingNChanges" xml:space="preserve">
    <value>Synchronizing {0} change(s) from Dropbox.</value>
  </data>
  <data name="Dropbox_SynchronizingProgress" xml:space="preserve">
    <value>Synchronizing {0}% of {1} change(s) from Dropbox.</value>
  </data>
  <data name="Dropbox_SynchronizingProgressWithFailure" xml:space="preserve">
    <value>Synchronizing {0}% of {1} change(s) from Dropbox with {2} failure(s).</value>
  </data>
  <data name="Error_AutoSwapDeploymentOngoing" xml:space="preserve">
    <value>There is an auto swap deployment currently ongoing please try again when it completes.</value>
  </data>
  <data name="Error_DeploymentInProgress" xml:space="preserve">
    <value>There is a deployment currently in progress. Please try again when it completes.</value>
  </data>
  <data name="Error_DeploymentNotFound" xml:space="preserve">
    <value>Deployment '{0}' not found.</value>
  </data>
  <data name="Error_DropboxValueNotSpecified" xml:space="preserve">
    <value>Value for Dropbox sync '{0}' not specified.</value>
  </data>
  <data name="Error_DumbProtocolNotSupported" xml:space="preserve">
    <value>The dumb protocol is not supported.</value>
  </data>
  <data name="Error_DumpFormatNotSupported" xml:space="preserve">
    <value>Dump format ({0}) is not supported.</value>
  </data>
  <data name="Error_EmptyPayload" xml:space="preserve">
    <value>The json payload is empty.</value>
  </data>
  <data name="Error_FullMiniDumpNotSupported" xml:space="preserve">
    <value>Site sku ({0}) does not support full minidump.</value>
  </data>
  <data name="Error_InvalidRepoUrl" xml:space="preserve">
    <value>Repository url '{0}' is invalid.</value>
  </data>
  <data name="Error_LogDetailsNotFound" xml:space="preserve">
    <value>LogId '{0}' was not found in Deployment '{1}'.</value>
  </data>
  <data name="Error_MismatchDropboxCursor" xml:space="preserve">
    <value>Mismatch dropbox origin cursor.</value>
  </data>
  <data name="Error_MissingContentDispositionHeader" xml:space="preserve">
    <value>Missing Content-Disposition header.</value>
  </data>
  <data name="Error_NonGitRepositoryFound" xml:space="preserve">
    <value>Unable to proceed with the operation. A '{0}' repository was found at the target location.</value>
  </data>
  <data name="Error_RepositoryNotFound" xml:space="preserve">
    <value>Repository could not be found.</value>
  </data>
  <data name="Error_UnsupportedFormat" xml:space="preserve">
    <value>The json payload is unsupported.</value>
  </data>
  <data name="Error_WebJobAlreadyExists" xml:space="preserve">
    <value>The WebJob already exists.</value>
  </data>
  <data name="Error_WebJobAlreadyRunning" xml:space="preserve">
    <value>Cannot start a new run since job is already running.</value>
  </data>
  <data name="Error_WebJobsStopped" xml:space="preserve">
    <value>WebJobs are currently in "stopped" state.</value>
  </data>
  <data name="LogStream_AppShutdown" xml:space="preserve">
    <value>{0}{1}  The application was terminated.{0}</value>
  </data>
  <data name="LogStream_Error" xml:space="preserve">
    <value>{0}{1}  Error has occurred and stream is terminated. {2}{0}</value>
  </data>
  <data name="LogStream_Heartbeat" xml:space="preserve">
    <value>{0}  No new trace in the past {1} min(s).{2}</value>
  </data>
  <data name="LogStream_Timeout" xml:space="preserve">
    <value>{0}  Stream terminated due to timeout {1} min(s).{2}</value>
  </data>
  <data name="LogStream_Welcome" xml:space="preserve">
    <value>{0}  Welcome, you are now connected to log-streaming service.{1}</value>
  </data>
  <data name="OneDriveApplyingChanges" xml:space="preserve">
    <value>Applying {0} changes ...</value>
  </data>
  <data name="OneDriveApplyResult" xml:space="preserve">
    <value>{0} successed, {1} failed.</value>
  </data>
  <data name="OneDriveDeletedDirectory" xml:space="preserve">
    <value>Deleted directory {0} ...</value>
  </data>
  <data name="OneDriveDeletedFile" xml:space="preserve">
    <value>Deleted file {0} ...</value>
  </data>
  <data name="OneDriveInvalidRequestUri" xml:space="preserve">
    <value>Invalid request uri '{0}'</value>
  </data>
  <data name="OneDriveNoChangesFound" xml:space="preserve">
    <value>No changes found.</value>
  </data>
  <data name="OneDriveUnableToSync" xml:space="preserve">
    <value>Unable to sync OneDrive, @changes.resync is {0}</value>
  </data>
  <data name="OneDrive_Synchronized" xml:space="preserve">
    <value>Synchronized {0} change(s) from OneDrive.</value>
  </data>
  <data name="OneDrive_SynchronizedWithFailure" xml:space="preserve">
    <value>Synchronized {0} of {1} change(s) from OneDrive with {2} failure(s).</value>
  </data>
  <data name="OneDrive_Synchronizing" xml:space="preserve">
    <value>Synchronizing changes from OneDrive.</value>
  </data>
  <data name="OneDrive_SynchronizingProgress" xml:space="preserve">
    <value>Synchronizing {0}% of {1} change(s) from OneDrive.</value>
  </data>
  <data name="OneDrive_SynchronizingProgressWithFailure" xml:space="preserve">
    <value>Synchronizing {0}% of {1} change(s) from OneDrive with {2} failure(s).</value>
  </data>
  <data name="ReceivingChanges" xml:space="preserve">
    <value>Receiving changes.</value>
  </data>
  <data name="SettingDoesNotExist" xml:space="preserve">
    <value>The setting '{0}' does not exist.</value>
  </data>
  <data name="VfsControllerBase_CannotDeleteDirectory" xml:space="preserve">
    <value>Cannot delete directory. It is either not empty or access is not allowed.</value>
  </data>
  <data name="VfsController_Busy" xml:space="preserve">
    <value>The repository is currently busy handling another request. Please try again later.</value>
  </data>
  <data name="VfsController_CannotUpdateDirectory" xml:space="preserve">
    <value>The resource represents a directory which can not be updated.</value>
  </data>
  <data name="VfsController_EtagMismatch" xml:space="preserve">
    <value>ETag does not represent the latest state of the resource.</value>
  </data>
  <data name="VfsController_MissingIfMatch" xml:space="preserve">
    <value>Updating an existing resource requires an If-Match header carrying a single, strong ETag.</value>
  </data>
  <data name="VfsController_WriteConflict" xml:space="preserve">
    <value>Could not write to local resource '{0}' due to error '{1}'.</value>
  </data>
  <data name="VfsScmController_DeploymentError" xml:space="preserve">
    <value>Deployment failed with status: '{0}'. Please retry operation.</value>
  </data>
  <data name="VfsScmController_EtagMismatch" xml:space="preserve">
    <value>ETag does not represent an existing commit ID: '{0}'. Updates must be based on an existing commit ID.</value>
  </data>
  <data name="VfsScmController_MissingIfMatch" xml:space="preserve">
    <value>Updating an existing resource requires an If-Match header carrying a single, strong ETag based on an existing commit ID.</value>
  </data>
  <data name="VfsScmController_WeakEtag" xml:space="preserve">
    <value>Invalid ETag: '{0}'. Updating an existing resource requires a strong etag based on an existing commit ID.</value>
  </data>
  <data name="VfsScmUpdate_Error" xml:space="preserve">
    <value>Could not complete update -- received error '{0}'. Please try again.</value>
  </data>
  <data name="Vso_Synchronizing" xml:space="preserve">
    <value>Synchronizing changes from VSTS ...</value>
  </data>
</root>